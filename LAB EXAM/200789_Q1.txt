def get_percept(loc, state_space):
    loc, state_space= rule_action(loc, state_space)
    return loc, state_space

def goalTest(final, goal_state):
    if final==goal_state:
        return True
    else:
        return False


def rule_action(loc, state_space):
    if state_space[loc] == 0:
        print("No Obstacle")
        loc+=1
        return loc, state_space
    elif state_space[loc] == 2:
        print("Going up the chair")
        state_space[loc]-=1
        loc+=1
        return loc, state_space
    elif state_space[loc] == 1:
        print("Going down the chair")
        state_space[loc]-=1
        return loc, state_space
    else:
        print("Banana Found, Goal Achieved :)")
        state_space[loc]-=3
        loc+=1
        goal = True
        return loc, state_space


state_space=[0,2,0,3]
goal_state= [0,0,0,0]
goal=False
path_cost= 0
start_loc= 0

while goal==False:
    goal= goalTest(state_space, goal_state)
    if goal==True:
        break
    else:
        start_loc, state_space= get_percept(start_loc, state_space)


        




# import random

# goal = "banana"

# banana_location = 10
# chair_location = 5

# def approach_banana():
#     print("Going towards banana...")

# def move_towards_banana():
#     print("Moving towards banana...")

# def pick_up_banana():
#     print("Picking up banana...")

# def climb_chair():
#     print("Climbing on chair...")

# def climb_down_chair():
#     print("Climbing down chair...")
    
# def circumvent_chair():
#     print("Circumventing chair...")

# if banana_location > chair_location:
#     approach_banana()
#     climb_chair()
#     pick_up_banana()
#     climb_down_chair()
# else:
#     move_towards_banana()
#     if chair_location in range(banana_location-1, banana_location+2):
#         circumvent_chair()

# def execute_plan():
#     print("Executing plan...")

# execute_plan()

# goal_achieved = random.choice([True, False])

# while not goal_achieved:
#     obstacle_encountered = random.choice([True, False])
#     if obstacle_encountered:
#         print("OBSTACLE!!!")
#         update_plan()
#         execute_plan()
#     else:
#         print("MOVING FORWARD!!!")
#         goal_achieved = random.choice([True, False])

# if goal_achieved:
#     print("Banana acquired")
# else:
#     print("Banana not acquired :(")
